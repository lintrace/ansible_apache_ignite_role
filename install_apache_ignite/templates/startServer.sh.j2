#!/bin/bash

# Usage:
#   get_ignite_pid [variable]
#   when variable receive returned PID of ignite process
#   where "" - is not startd, othervise is valid PID value
get_ignite_pid() {
    eval $1=$(ps aux | grep "[j]ava.*{{ignite_bin_dir}}/ignite.sh" | awk '{ print $2 }')
}

# Check for an already running ignite
get_ignite_pid ignite_pid
if [ -n "${ignite_pid}" ]; then 
    echo "$ignite_pid" > "{{ ignite_pid_file }}"
    echo "Ignite is already running on this server with PID=${ignite_pid}!"
    exit
fi

# Asynchronous launch of ignite
"{{ ignite_bin_dir }}"/ignite.sh "{{ ignite_config_dir }}"/customIgniteConfiguration.xml 1>"{{ ignite_logs_dir }}"/console.out 2>"{{ ignite_logs_dir }}"/console.err &

# Create pid file for the started process
echo -n "Wait to start"
for counter in {1..15}
do
    sleep 1 # Wait 1 second and searching ignite process
    get_ignite_pid ignite_pid
    if [ -n "$ignite_pid" ]
    then
        echo "$ignite_pid" > "{{ ignite_pid_file }}"
        echo -e "\nIgnite PID=${ignite_pid}"
        break
    else
        echo -n " ..${counter}"
    fi
done
